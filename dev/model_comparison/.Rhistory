kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
# Chunk 1
library(tidyverse)
library(kableExtra)
library(knitr)
library(jsonlite)
source("utility.R")
# Chunk 2: extract metrics
files = list.files("../../DaCy_training/metrics/", full.names = T)
performance = files %>% map_df(metrics_from_json)
# Chunk 3: previous performance
perf = tribble(
~"Framework",           ~Accuracy, ~"Location", ~"Organization", ~"Person", ~"Avg F1" , ~UAS, ~LAS, ~WPS,
"BERT",           NA,        83.90,      72.98,       92.82,       84.04,       NA,      NA, NA,
"Flair",          97.97,     84.82,      62.95,       93.15,       81.78,       NA,      NA, NA,
"SpaCy (v2)",     96.15,     75.96,      59.57,       87.87,       75.73,       81.36,   77.46, NA,
"Stanza",         97.75,     NA,         NA,          NA,          NA,          86.83,   84.19, NA,
"Polyglot",       NA,        64.95,      39.3,        78.74,       64.18,       NA,      NA, NA,
"NERDA (mBERT)",  NA,        80.75,      65.73,       92.66,       80.66,       NA,      NA, NA,
)
performance = rbind(performance, perf)
# Chunk 4: fixing names
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models) %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
# Chunk 5: table options
cap = "Highest scores are in bold and second highest is underscored. No values indicate that the framwork does not have trained model for the specific task or that the value is not specified by the creator. WPS indicate words pr. second."
metrics = perf_final
options(knitr.kable.NA = '')
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>% arrange(Framework) %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final
options(knitr.kable.NA = '')
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>% arrange(Framework) %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. No values indicate that the framwork does not have trained model for the specific task or that the value is not specified by the creator. WPS indicate words pr. second."
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption=cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. No values indicate that the framwork does not have trained model for the specific task or that the value is not specified by the creator. WPS indicate words pr. second."
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
columns = colnames(metrics)[2:length(colnames(metrics))]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0)) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
kable_material(c("hover", "condensed"))
sort(dataset[[col]])
?sort
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
# Chunk 1
library(tidyverse)
library(kableExtra)
library(knitr)
library(jsonlite)
source("utility.R")
# Chunk 2: extract metrics
files = list.files("../../DaCy_training/metrics/", full.names = T)
performance = files %>% map_df(metrics_from_json)
# Chunk 3: previous performance
perf = tribble(
~"Framework",           ~Accuracy, ~"Location", ~"Organization", ~"Person", ~"Avg F1" , ~UAS, ~LAS, ~WPS,
"BERT",           NA,        83.90,      72.98,       92.82,       84.04,       NA,      NA, NA,
"Flair",          97.97,     84.82,      62.95,       93.15,       81.78,       NA,      NA, NA,
"SpaCy (v2)",     96.15,     75.96,      59.57,       87.87,       75.73,       81.36,   77.46, NA,
"Stanza",         97.75,     NA,         NA,          NA,          NA,          86.83,   84.19, NA,
"Polyglot",       NA,        64.95,      39.3,        78.74,       64.18,       NA,      NA, NA,
"NERDA (mBERT)",  NA,        80.75,      65.73,       92.66,       80.66,       NA,      NA, NA,
)
performance = rbind(performance, perf)
# Chunk 4: fixing names
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models) %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
performance = performance %>%
filter(!Framework %in% non_final_models) %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models)
perf_final = performance %>% na.omit()
performance = performance %>%
filter(!Framework %in% non_final_models) %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models)
perf_training = performance %>% na.omit()
metrics = perf_training %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
# Chunk 1
library(tidyverse)
library(kableExtra)
library(knitr)
library(jsonlite)
source("utility.R")
# Chunk 2: extract metrics
files = list.files("../../DaCy_training/metrics/", full.names = T)
performance = files %>% map_df(metrics_from_json)
# Chunk 3: previous performance
perf = tribble(
~"Framework",           ~Accuracy, ~"Location", ~"Organization", ~"Person", ~"Avg F1" , ~UAS, ~LAS, ~WPS,
"BERT",           NA,        83.90,      72.98,       92.82,       84.04,       NA,      NA, NA,
"Flair",          97.97,     84.82,      62.95,       93.15,       81.78,       NA,      NA, NA,
"SpaCy (v2)",     96.15,     75.96,      59.57,       87.87,       75.73,       81.36,   77.46, NA,
"Stanza",         97.75,     NA,         NA,          NA,          NA,          86.83,   84.19, NA,
"Polyglot",       NA,        64.95,      39.3,        78.74,       64.18,       NA,      NA, NA,
"NERDA (mBERT)",  NA,        80.75,      65.73,       92.66,       80.66,       NA,      NA, NA,
)
performance = rbind(performance, perf)
# Chunk 4: fixing names
performance = performance %>%
filter(!Framework %in% non_final_models) %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models)
perf_training = performance %>% na.omit()
# Chunk 5: front table
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_training %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
performance
# Chunk 1
library(tidyverse)
library(kableExtra)
library(knitr)
library(jsonlite)
source("utility.R")
# Chunk 2: extract metrics
files = list.files("../../DaCy_training/metrics/", full.names = T)
performance = files %>% map_df(metrics_from_json)
# Chunk 3: previous performance
perf = tribble(
~"Framework",           ~Accuracy, ~"Location", ~"Organization", ~"Person", ~"Avg F1" , ~UAS, ~LAS, ~WPS,
"BERT",           NA,        83.90,      72.98,       92.82,       84.04,       NA,      NA, NA,
"Flair",          97.97,     84.82,      62.95,       93.15,       81.78,       NA,      NA, NA,
"SpaCy (v2)",     96.15,     75.96,      59.57,       87.87,       75.73,       81.36,   77.46, NA,
"Stanza",         97.75,     NA,         NA,          NA,          NA,          86.83,   84.19, NA,
"Polyglot",       NA,        64.95,      39.3,        78.74,       64.18,       NA,      NA, NA,
"NERDA (mBERT)",  NA,        80.75,      65.73,       92.66,       80.66,       NA,      NA, NA,
)
performance = rbind(performance, perf)
# Chunk 4: fixing names
performance = performance %>%
mutate(Framework = if_else(Framework == "dane_-l-ctra_cased", "DaCy small", Framework),
Framework = if_else(Framework == "dane_medium", "DaCy medium", Framework),
Framework = if_else(Framework == "dane_large", "DaCy large", Framework),
Framework = if_else(Framework == "BERT", "DaNLP BERT", Framework))
non_final_models = c("dane_conv_small", "dane_-l-ctra_uncased", "dane_electra")
perf_final = performance %>%
filter(!Framework %in% non_final_models)
perf_training = performance %>% na.omit()
metrics = perf_training %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed"))
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
metrics = perf_training %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
colnames(metrics)
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
arrange(Framework) %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
arrange(Framework) %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image()
webshot::install_phantomjs()
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image()
?as_image
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="tmp.png")
?save_kable
?as_image
metrics = perf_final %>% arrange(Framework)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[2:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 1, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="../../img/perf.png")
?as_image
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
arrange(Framework) %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="../../DaCy_training/img/perf_training.png")
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
arrange(Framework) %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="../../DaCy_training/img/perf_training.png")
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
perf_training %>%
arrange(Framework)
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
arrange(Framework) %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="../../DaCy_training/img/perf_training.png")
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
perf_training = perf_training %>%
arrange(Framework)
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped"))
perf_training = perf_training %>%
arrange(Framework)
perf_training$Model = c("XLM-Roberta", "DaBERT", "Ælæctra Cased", "Ælæctra Uncased", "DaConvBERT", "DaELECTRA")
metrics =perf_training %>%
select("Framework", "Model", "Accuracy", "Location", "Organization", "Person", "Avg F1", "UAS", "LAS", "WPS")
colnames(metrics)
options(knitr.kable.NA = '')
cap = "Highest scores are in bold and second highest is underscored. WPS indicate words pr. second."
low_columns = c("WPS")
high_columns = colnames(metrics)[3:length(colnames(metrics))]
high_columns = high_columns[!high_columns %in% low_columns]
metrics %>%
kbl(.,
align=c("l", "l", rep("c", length(columns))), digits = c(0, rep(2, 7), 0), caption = cap) %>%
add_header_above(c(" " = 2, "POS" = 1, "NER"= 4, "Dependency Parsing" = 2, "Speed" = 1)) %>%
highlight_highest(., metrics, columns = high_columns) %>%
highlight_lowest(., metrics, columns = low_columns) %>%
kable_material(c("hover", "condensed", "striped")) %>%
as_image(file ="../../DaCy_training/img/perf_training.png")
